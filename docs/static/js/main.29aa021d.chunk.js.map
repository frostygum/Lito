{"version":3,"sources":["components/bgChanger/index.js","components/toolBox/index.js","components/menu/index.js","components/slider/index.js","App.js","index.js"],"names":["Background","styled","div","props","color","BgChanger","onClick","ToolBoxWrapper","position","ToolBox","className","initial","width","animate","active","transition","duration","onMouseLeave","menuList","toolBox","MenuWrapper","MenuContainer","MenuToaster","Menu","useState","isShown","setIsShown","onMouseEnter","icon","size","disableToaster","toasterPosition","title","SliderWrapper","SliderInput","SliderPreview","Slider","value","setValue","id","type","min","max","step","onChange","e","target","App","handle","useFullScreenHandle","isFullscreen","setIsFullscreen","isPanelActive","setIsPanelActive","bgColor","setBgColor","colorArr","setColorArr","panelPosition","setPanelPosition","menus","faPalette","faCompress","faExpand","exit","enter","faWindowMinimize","faArrowAltCircleLeft","faArrowAltCircleRight","map","menu","menuKey","key","handleChangeValue","idx","arr","join","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29aa021d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Background = styled.div`\r\n  width: 100vw;\r\n  background-color: ${props => props.color ? 'rgb(' + props.color + ')' : 'var(--light)'};\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  z-index: -1;\r\n`\r\n\r\nfunction BgChanger( props ) {\r\n  return (\r\n    <Background \r\n      color={props.color}\r\n      onClick={() => props.onClick(false)}  \r\n    />\r\n  );\r\n}\r\n\r\nexport default BgChanger;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst ToolBoxWrapper = styled.div`\r\n  min-height: 2rem;\r\n  position: absolute;\r\n  left: ${props => props.position === 'right' ? 'auto' : '4rem' };\r\n  right: ${props => props.position === 'right' ? '4rem' : 'auto' };\r\n  top: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  .toolBoxContainer {\r\n    min-height: 2rem;\r\n    width: 6rem;\r\n    background-color: var(--dark);\r\n    position: relative;\r\n    border-radius: var(--rounded);\r\n    box-shadow: var(--shadow);\r\n    padding: 1rem;\r\n    display: flex;\r\n\r\n    .left {\r\n      display: grid;\r\n      grid-row-gap: 0.8rem;\r\n    }\r\n\r\n    .right {\r\n      flex-grow: 1;\r\n      margin-left: 0.8rem;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n      transition: visibility 0s, opacity 0.5s linear;\r\n      overflow: hidden;\r\n    }\r\n\r\n    .right.active {\r\n      visibility: visible;\r\n      opacity: 1;\r\n    }\r\n\r\n    .right.inActive {\r\n      width: 0;\r\n      visibility: hidden;\r\n      opacity: 0;\r\n      transition: visibility 0s linear 100ms, opacity 0.5s linear;\r\n    }\r\n  }\r\n`;\r\n\r\nfunction ToolBox( props ) {\r\n\r\n  return (\r\n    <ToolBoxWrapper\r\n      position={props.position}\r\n    >\r\n      <motion.div\r\n        className='toolBoxContainer'\r\n        initial={{width: '4rem'}}\r\n        animate={{width: props.active ? '30rem' : '4rem'}}\r\n        transition={{duration: 0.3}}\r\n        onMouseLeave={() => props.onMouseLeave(false)}\r\n      >\r\n        <div className='left'>\r\n          {\r\n            props.menuList\r\n          }  \r\n        </div>\r\n        <div className={'right ' + (props.active ? 'active' : 'inActive')}>\r\n          {\r\n            props.toolBox\r\n          }\r\n        </div>\r\n      </motion.div>\r\n    </ToolBoxWrapper>\r\n  );\r\n}\r\n\r\nexport default ToolBox;\r\n","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styled from 'styled-components';\r\n\r\nconst MenuWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst MenuContainer = styled.div`\r\n  width: 4rem;\r\n  height: 4rem;\r\n  background-color: var(--green);\r\n  border-radius: var(--rounded);\r\n  cursor: pointer;\r\n  text-align: center;\r\n  color: var(--dark);\r\n  box-shadow: var(--shadow);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  filter: ${props => props.active ? 'grayscale(0%)' : 'grayscale(70%)'};\r\n`\r\n\r\nconst MenuToaster = styled.div`\r\n  height: 2.5rem;\r\n  padding: 0 0.8rem 0 0.8rem;\r\n  background-color: var(--green);\r\n  border-radius: var(--rounded);\r\n  text-align: center;\r\n  color: var(--dark);\r\n  position: absolute;\r\n  left: ${props => props.position === 'right' ? '7rem' : 'auto' };\r\n  right: ${props => props.position === 'right' ? 'auto' : '7rem' };\r\n  box-shadow: var(--shadow);\r\n  display: flex;\r\n  align-items: center;\r\n  font-weight: bold;\r\n  white-space: nowrap;\r\n  z-index: 100;\r\n`\r\n\r\nfunction Menu( props ) {\r\n  let [isShown, setIsShown] = useState(false);\r\n\r\n  return (\r\n    <MenuWrapper>\r\n      <MenuContainer\r\n        onMouseEnter={() => setIsShown(true)}\r\n        onMouseLeave={() => setIsShown(false)}\r\n        active={isShown}\r\n        onClick={props.onClick}\r\n      >\r\n        <FontAwesomeIcon icon={props.icon} size='2x'/>\r\n      </MenuContainer>\r\n      {\r\n        isShown && !props.disableToaster ?\r\n        <MenuToaster position={props.toasterPosition}>\r\n          <span>{ props.title }</span>\r\n        </MenuToaster>\r\n      : \r\n        ''\r\n      }\r\n    </MenuWrapper>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SliderWrapper = styled.div`\r\n  padding: 0.3rem 0.8rem;\r\n  display: flex;\r\n`;\r\n\r\nconst SliderInput = styled.div`\r\n  width: 100%;\r\n\r\n  .sliderTitle {\r\n    color: var(--light);\r\n    font-weight: bold;\r\n    margin: 0;\r\n  }\r\n\r\n  input[type=range] {\r\n    height: 25px;\r\n    -webkit-appearance: none;\r\n    margin: 10px 0;\r\n    width: 100%;\r\n    background-color: transparent;\r\n  }\r\n  \r\n  input[type=range]:focus {\r\n    outline: none;\r\n  }\r\n\r\n  input[type=range]::-webkit-slider-runnable-track {\r\n    width: 100%;\r\n    height: 0.5rem;\r\n    cursor: pointer;\r\n    background-color: var(--dark-green);\r\n    border-radius: 1rem;\r\n  }\r\n\r\n  input[type=range]::-webkit-slider-thumb {\r\n    height: 18px;\r\n    width: 18px;\r\n    border-radius: 25px;\r\n    border: 0;\r\n    background-color: var(--green);\r\n    cursor: pointer;\r\n    -webkit-appearance: none;\r\n    margin-top: -0.3rem;\r\n  }\r\n\r\n  input[type=range]:focus::-webkit-slider-runnable-track {\r\n    background-color: var(--dark-green);\r\n  }\r\n\r\n  input[type=range]::-moz-range-track {\r\n    width: 100%;\r\n    height: 0.5rem;\r\n    cursor: pointer;\r\n    background-color: var(--dark-green);\r\n    border-radius: 1rem;\r\n  }\r\n\r\n  input[type=range]::-moz-range-thumb {\r\n    height: 18px;\r\n    width: 18px;\r\n    border-radius: 25px;\r\n    border: 0;\r\n    background-color: var(--green);\r\n    cursor: pointer;\r\n  }\r\n\r\n  input[type=range]::-ms-track {\r\n    width: 100%;\r\n    height: 0.5rem;\r\n    cursor: pointer;\r\n    background: transparent;\r\n    border-color: transparent;\r\n    color: transparent;\r\n  }\r\n\r\n  input[type=range]::-ms-fill-lower {\r\n    background: var(--dark-green);\r\n    border-radius: 1rem;\r\n  }\r\n\r\n  input[type=range]::-ms-fill-upper {\r\n    background: var(--dark-green);\r\n    border-radius: 1rem;\r\n  }\r\n\r\n  input[type=range]::-ms-thumb {\r\n    margin-top: 1px;\r\n    height: 18px;\r\n    width: 18px;\r\n    border-radius: 25px;\r\n    border: 0;\r\n    background: var(--green);\r\n    cursor: pointer;\r\n  }\r\n\r\n  input[type=range]:focus::-ms-fill-lower {\r\n    background: #2497E3;\r\n  }\r\n\r\n  input[type=range]:focus::-ms-fill-upper {\r\n    background: #2497E3;\r\n  }\r\n`;\r\n\r\nconst SliderPreview = styled.div`\r\n  color: var(--light-green);\r\n  width: 20%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Slider = (props) => {\r\n  let [value, setValue] = useState(0);\r\n\r\n  const handleOnchange = (e) => {\r\n    let value = e.target.value;\r\n\r\n    if(props.setValue) {\r\n      props.setValue(value);\r\n    }\r\n    setValue(value);\r\n  }\r\n\r\n  return (\r\n    <SliderWrapper>\r\n      <SliderInput>\r\n        <h4 className=\"sliderTitle\">{props.title}</h4>\r\n        <input \r\n          id='typeinp'\r\n          type='range' \r\n          min={props.min ? props.min : 0}\r\n          max={props.max ? props.max : 10} \r\n          step={props.step ? props.step : 0.5}\r\n          value={props.value ? props.value : value}\r\n          onChange={handleOnchange}\r\n        />\r\n      </SliderInput>\r\n      <SliderPreview>\r\n        {props.value ? props.value : value}\r\n      </SliderPreview>\r\n    </SliderWrapper>\r\n  );\r\n}\r\n\r\nexport default Slider;\r\n","import React, { useState } from 'react';\nimport { \n  BgChanger, \n  ToolBox, \n  Menu, \n  Slider \n} from './components';\nimport { \n  FullScreen, \n  useFullScreenHandle \n} from \"react-full-screen\";\nimport { \n  faPalette, \n  faExpand, \n  faWindowMinimize, \n  faArrowAltCircleRight, \n  faCompress,\n  faArrowAltCircleLeft\n} from '@fortawesome/free-solid-svg-icons'\n\nimport './App.css';\n\nfunction App() {\n  const handle = useFullScreenHandle();\n  let [isFullscreen, setIsFullscreen] = useState(false);\n  let [isPanelActive, setIsPanelActive] = useState(false);\n  let [bgColor, setBgColor] = useState('200, 200, 200');\n  let [colorArr, setColorArr] = useState([0, 0, 0]);\n  let [panelPosition, setPanelPosition] = useState('left');\n\n  const menuList = [\n    {\n      icon: faPalette,\n      title: 'Change color',\n      onClick: () => {\n        setIsPanelActive(!isPanelActive);\n      }\n    },\n    {\n      icon: isFullscreen ? faCompress : faExpand,\n      title: isFullscreen ? 'Exit Fullscreen' : 'Fullscreen',\n      onClick: () => {\n        if(!isFullscreen) {\n          handle.enter();\n          setIsFullscreen(true);\n        }\n        else {\n          handle.exit();\n          setIsFullscreen(false);\n        }\n      }\n    },\n    {\n      icon: faWindowMinimize,\n      title: 'Minimize panel'\n    },\n    {\n      icon: panelPosition === 'right' ? faArrowAltCircleLeft : faArrowAltCircleRight,\n      title: panelPosition === 'right' ? 'Snap to right' : 'Snap to left',\n      onClick: () => {\n        if(panelPosition === 'right') {\n          setPanelPosition('left');\n        }\n        else {\n          setPanelPosition('right');\n        }\n      }\n    },\n  ];\n\n  let menus = menuList.map((menu, menuKey) => {\n    return(\n      <Menu \n        key={menuKey}\n        icon={menu.icon} \n        title={menu.title} \n        onClick={menu.onClick ? menu.onClick : null}\n        disableToaster={isPanelActive}\n        toasterPosition={\n          panelPosition === 'right' ? 'left' : 'right' \n        }\n      />\n    )\n  });\n\n  const handleChangeValue = (value, idx) => {\n    let arr = [...colorArr];\n    arr[idx] = value;\n    setColorArr(arr);\n    setBgColor(colorArr.join());\n  }\n\n  return (\n    <FullScreen handle={handle}>\n      <BgChanger color={bgColor} onClick={setIsPanelActive}/>\n      <ToolBox \n        active={isPanelActive} \n        menuList={menus}\n        onMouseLeave={setIsPanelActive}\n        position={panelPosition}\n        toolBox={\n          <>\n            <Slider \n              min='0'\n              max='255'\n              step='1'\n              title='Red'\n              value={colorArr[0]}\n              setValue={(value) => handleChangeValue(value, 0)}\n            />\n            <Slider \n              min='0'\n              max='255'\n              step='1'\n              title='Green'\n              setValue={(value) => handleChangeValue(value, 1)}\n            />\n            <Slider \n              min='0'\n              max='255'\n              step='1'\n              title='Blue'\n              setValue={(value) => handleChangeValue(value, 2)}\n            />\n          </>\n        }\n      />\n    </FullScreen>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}